<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.plz.config.mybatis.mapper.dogMapper">

	<sql id="dog-dogInfo-dogImage-select-sql">
		 select  d.dog_id, d.dog_name, d.species, d.gender, d.weight, d.birth,
		   		 dc.code, dc.code_name, dc.category,
		   		 dim.dog_image
   		 from   dog d, doginfo di, code dc, dog_image dim
	</sql>

	<insert id="insertDog" parameterType="Dog">
		<selectKey keyProperty="dogId" resultType="_int" order="BEFORE">
			select dog_id_seq.nextval from dual
		</selectKey>
		insert into dog values(#{dogId}, #{dogName}, #{species}, #{gender}, #{weight}, #{birth}, #{email})
	</insert>
	
	<!-- <resultMap type="dog" id="dog-resultmap">
		<id column="dog_id" property="dogId"/>
		<result column="dog_name" property="dogName"/>
		<result column="species" property="species"/>
		<result column="gender" property="gender"/>
		<result column="weight" property="weight"/>
		<result column="birth" property="birth"/>
		<result column="email" property="email"/>
		<collection property="dogImageList" ofType="DogImage">
			<id column="dog_image" property="dogImage"/>
			<result column="dog_id" property="dogId"/>
		</collection>
		<collection property="dogInfoList" ofType="DogInfo">
			<id column="code_dog" property="codeDog"/>
			<result column="dog_id" property="dogId"/>
			<association property="code" javaType="Code">
				<id column="code" property="code"/>
				<result column="code_name" property="codeName"/>
				<result column="category" property="category"/>
			</association>
		</collection>
	</resultMap> -->
	
	<!-- 강아지에서 강아지 이미지와 강아지 상태 조회 resulmap -->
	<!-- 
		dogInfoList은 codeDog과 해당하는 code의 code를 갖는 property가 있어야 된다. 
	-->
	<resultMap type="Dog" id="dog-dogInfo-dogImage-resulmap">
			<id column="dog_id" property="dogId"/>
			<result column="dog_name" property="dogName"/>
			<result column="species" property="species"/>
			<result column="gender" property="gender"/>
			<result column="weight" property="weight"/>
			<result column="birth" property="birth"/>
			<collection property="dogImage" ofType="DogImage">
				<result property="dogImage" column="dog_image"/>
			</collection>
			<collection property="dogInfoList" ofType="DogInfo">
				<result column="code" property="codeDog"/>
				<association property="code" javaType="Code">
					<id column="code" property="code"/>
					<result column="code_name" property="codeName"/>
				</association>
			</collection>		
	</resultMap>
	
	<!-- 이메일로 강아지 ,강아지 상태, 강아지 이미지 조회  -->
	<select id="selectDogJoinDogInfoDogImageByEmail" parameterType="string" resultMap="dog-dogInfo-dogImage-resulmap">
		select  d.dog_id, d.dog_name, d.species, d.gender, d.weight, d.birth,
				di.dog_image,
				c.code, c.code_name
				
   		from   	dog d, dog_image di, dogInfo dinfo, code c
		where   d.dog_id = di.dog_id(+)
		and		d.dog_id = dinfo.dog_id(+)
		and		dinfo.code_dog = c.code(+)
		and		d.email = #{email}
		order by d.dog_id
	</select>
	
	<!-- resId로 강아지, 강아지 상태, 강아지 이미지 조회 -->
	<select id="selectDogJoinDogInfoDogImageByDogId" parameterType="_int" resultMap="dog-dogInfo-dogImage-resulmap">
		select  d.dog_id, d.dog_name, d.species, d.gender, d.weight, d.birth,
				di.dog_image,
				c.code, c.code_name
				
   		from   	dog d, dog_image di, dogInfo dinfo, code c
		where   d.dog_id = di.dog_id(+)
		and		d.dog_id = dinfo.dog_id(+)
		and		dinfo.code_dog = c.code(+)
		and		d.dog_id = #{dogId}
		order by d.dog_id
	</select>
	
	<update id="updateDog" parameterType="dog">
		update	dog
		set		dog_name = #{dogName},
				species = #{species},
				gender = #{gender},
				weight = #{weight},
				birth = #{birth}
		where	dog_id = #{dogId}
	</update>
	
	<delete id="deleteDog" parameterType="_int">
		delete from dog where dog_id = #{value}
	</delete>
	
	<!-- 강아지 이미지 등록 -->
	<insert id="insertDogImage" parameterType="dogImage">
		insert into dog_image values(#{dogImage}, #{dogId})
	</insert>
	
	<!-- dogImage명으로 수정 -->
	<update id="updateDogImage" parameterType="map">
		update dog_image set dog_image = #{dogImage} where dog_id = #{dogId} and dog_image = #{originalImage}
	</update>
	
	<!-- dogImage명으로 삭제 -->
	<delete id="deleteDogImage" parameterType="string">
		delete from DOG_IMAGE where DOG_IMAGE = #{value} 
	</delete>
	
	<!-- ########################################## -->
	<!-- 강아지 정보(dogInfo) CRUD -->
	<insert id="insertDogInfo" parameterType="dogInfo">
		insert into dogInfo values(#{dogId}, #{codeDog})
	</insert>
	
	<!-- dogImage명으로 수정 -->
	<update id="updateDogInfo" parameterType="dogInfo">
		update dogInfo set code_dog = #{codeDog} 
		where dog_id = #{dogId}
	</update>
	
	<!-- dogImage명으로 삭제 -->
	<delete id="deleteDogInfo" parameterType="_int">
		delete from dogInfo where dog_id = #{dogId} 
	</delete>
</mapper>