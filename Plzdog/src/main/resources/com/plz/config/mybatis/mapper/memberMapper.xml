<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.plz.config.mybatis.mapper.memberMapper">

	<insert id="insertMember" parameterType="member">
		INSERT INTO	member VALUES( 
								#{email},
								#{memberName},
								#{password},
								#{mainAddress},
								#{subAddress},
								#{zipcode},
								#{memberImage},
								#{phoneNum},
								#{memberEnable}
								)

	</insert>

	<!-- 회원의 모든 정보(MEMBER+SITTER+SKILL+CODE+DOG+DOG_IMAGE 조회 -->
	<sql id="member-select-sql">
		select email,
		member_name,
		main_address,
		sub_address,
		zipcode,
		member_image,
		phonenum
		from member
	</sql>

	<!-- 펫시터 전체 조회 -->
	<sql id="member-sitter-sql">
		SELECT	m.email,
				m.member_name,
				m.main_address,
				m.sub_address,
				m.zipcode,
				m.member_image,
				m.phonenum,
				s.school,
				s.certification,
				s.service_address,
				s.sitter_rate,
				c.code,
				c.code_name,
				c.category
		FROM 	member m, 
				sitter s, 
				skill k, 
				code c
		WHERE 	m.email = s.email
		AND		s.email = k.email
		AND		k.code_skill = c.code
	</sql>

	<sql id="member-review-sql">
		select r.review_rate,
		r.review_contents
		from member m, review r
		where m.email = r.email_sitter
	</sql>
	<!-- member-resultmap -->
	<resultMap type="member" id="member-resultmap">
		<id column="email" property="email" />
		<result column="member_name" property="memberName" />
		<result column="main_address" property="mainAddress" />
		<result column="sub_address" property="subAddress" />
		<result column="zipcode" property="zipcode" />
		<result column="member_image" property="memberImage" />
		<result column="phonenum" property="phoneNum" />
	</resultMap>

	<!-- member-join-sitter-resultmap -->
	<resultMap type="member" id="member-join-sitter-resultmap" extends="member-resultmap">
			<association property="sitter" javaType="com.plzdog.vo.Sitter">
			<id column="email" property="email" />
			<result column="school" property="school" />
			<result column="certification" property="certification" />
			<result column="service_Address" property="serviceAddress" />
			<result column="sitter_rate" property="sitterRate" />
			<collection property="skillList" ofType="Skill">
				<id property="email" column="email"/>
				<association property="code" javaType="code">
					<id property="code" column="code" />
					<result property="codeName" column="code_name"/>
					<result property="category" column="category" />
				</association>
			</collection>
		</association>
	</resultMap>

	<!-- member-join-review-resultmap-->
	<resultMap type="member" id="member-join-review-resultmap"
		extends="member-resultmap">
		<collection property="reviewList" ofType="Review">
			<id column="review_id" property="reviewId" />
			<result column="review_rate" property="reviewRate" />
			<result column="review_contents" property="reviewContents" />
			<result column="email" property="memberEmail" />
			<result column="email_sitter" property="sitterEmail" />
		</collection>
	</resultMap>
		
	<!-- 전체 멤버 조회 -->
	<select id="selectAllMember" resultMap="member-resultmap">
		<include refid="member-select-sql" />
	</select>

	<!-- email로 회원 조회 -->
	<select id="selectMemberByEmail" parameterType="string"
		resultMap="member-resultmap">
		<include refid="member-select-sql" />
		where email = #{value}
	</select>

	<!-- 이름으로 회원 조회 -->
	<select id="selectMemberByName" parameterType="string"
		resultMap="member-resultmap">
		<include refid="member-select-sql" />
		where member_name like '%'||#{value}||'%'
	</select>

	<!-- 펫시터 전체 조회 -->
	<select id="selectAllMemberJoinSitter" resultMap="member-join-sitter-resultmap">
		<include refid="member-sitter-sql" />
	</select>

	<!-- 이메일로 펫시터 조회 -->
	<select id="selectMemberJoinSitterByEmail" parameterType="string"
		resultMap="member-join-sitter-resultmap">
		<include refid="member-sitter-sql" />
		AND m.email = #{value}
	</select>

	<!-- 이름으로 펫시터 조회 -->
	<select id="selectMemberJoinSitterByName" parameterType="string"
		resultMap="member-join-sitter-resultmap">
		<include refid="member-sitter-sql" />
		and m.member_name like '%'||#{value}||'%'
	</select>

	<!-- 시터에 해당하는 리뷰 조회 -->
	<select id="selectMemberJoinReview" parameterType="string"
		resultMap="member-join-review-resultmap">
		<include refid="member-review-sql" />
		and m.email = #{value}
	</select>

	<!-- 회원 정보 수정 -->
	<update id="updateMember" parameterType="member">
		update member
		set
		member_name = #{memberName},
		password = #{password},
		main_address = #{mainAddress},
		sub_address = #{subAddress},
		zipcode = #{zipcode},
		member_image = #{memberImage},
		phonenum = #{phoneNum}
		where email = #{email}
	</update>

	<!-- 회원 정보 삭제 cascade -->
	<delete id="deleteMember" parameterType="string">
		delete from member where
		email = #{value}
	</delete>
</mapper>